<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAACAOfh/8qiDQ2OpR+4AAAAASUVORK5CYII=
</value>
  </data>
</root>